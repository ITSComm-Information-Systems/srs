# Generated by Django 3.2.4 on 2022-09-14 11:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import project.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project', '0001_initial'),
        ('oscauth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('ticket_id', models.PositiveIntegerField()),
                ('status', models.CharField(max_length=10)),
                ('data', models.JSONField()),
            ],
            options={
                'db_table': 'order_item_ticket_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserChartcomV',
            fields=[
                ('name', models.CharField(blank=True, max_length=20, primary_key=True, serialize=False)),
                ('dept', models.CharField(max_length=30)),
                ('account_number', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'order_user_chartcom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('cart_label', models.CharField(blank=True, max_length=100, null=True)),
                ('use_cart', models.BooleanField(default=True)),
                ('use_ajax', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('A', 'Add'), ('M', 'Modify'), ('D', 'Disconnect'), ('E', 'Equipment')], default='A', max_length=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('override', models.JSONField(blank=True, null=True)),
                ('route', models.CharField(choices=[('P', 'Preorder'), ('I', 'Incident'), ('E', 'Email')], default='P', max_length=1)),
                ('destination', models.CharField(blank=True, max_length=40)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BackupDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('shortcode', models.CharField(max_length=100)),
                ('size', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cost_calculated_date', models.DateTimeField(null=True)),
                ('versions_while_exists', models.PositiveIntegerField()),
                ('versions_after_deleted', models.PositiveIntegerField()),
                ('days_extra_versions', models.PositiveIntegerField()),
                ('days_only_version', models.PositiveIntegerField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oscauth.ldapgroup')),
            ],
        ),
        migrations.CreateModel(
            name='ChargeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chartcom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fund', models.CharField(max_length=30)),
                ('dept', models.CharField(max_length=30)),
                ('program', models.CharField(max_length=30)),
                ('class_code', models.CharField(max_length=30)),
                ('project_grant', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Feature Categories',
            },
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction', models.CharField(max_length=20)),
                ('local_key', models.CharField(blank=True, max_length=20)),
                ('remote_key', models.CharField(blank=True, max_length=20)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('level', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('shortcode', project.models.ShortCodeField(help_text='Six digit shortcode for billing purposes.', max_length=6)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('public_facing', models.BooleanField(default=False)),
                ('managed', models.BooleanField(default=True)),
                ('cpu', models.IntegerField(verbose_name='CPU')),
                ('ram', models.IntegerField(verbose_name='RAM')),
                ('replicated', models.BooleanField(default=True)),
                ('on_call', models.PositiveSmallIntegerField(choices=[(0, 'Business Hours'), (1, '24/7')], null=True)),
                ('in_service', models.BooleanField(default=True)),
                ('firewall', models.CharField(max_length=100)),
                ('backup', models.BooleanField(default=False)),
                ('support_email', models.CharField(max_length=100)),
                ('support_phone', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=100)),
                ('datacenter', models.CharField(max_length=100)),
                ('firewall_requests', models.CharField(max_length=100)),
                ('legacy_data', models.TextField()),
                ('admin_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_group', to='oscauth.ldapgroup')),
                ('backup_time', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'SERVER_BACKUP_TIME'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='backup_time', to='project.choice')),
                ('database_type', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'DATABASE_TYPE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='database_type', to='project.choice')),
                ('non_regulated_data', models.ManyToManyField(blank=True, limit_choices_to={'parent__code': 'NON_REGULATED_SENSITIVE_DATA'}, to='project.Choice')),
                ('os', models.ForeignKey(blank=True, limit_choices_to={'parent__code__in': ['SERVER_UNMANAGED_OS', 'LINUX', 'WINDOWS']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='os', to='project.choice')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oscauth.ldapgroup')),
                ('patch_day', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'SERVER_PATCH_DATE'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patch_day', to='project.choice')),
                ('patch_time', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'SERVER_PATCH_TIME'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patch_time', to='project.choice')),
                ('reboot_day', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'SERVER_REBOOT_DATE'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reboot_day', to='project.choice')),
                ('reboot_time', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'SERVER_REBOOT_TIME'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reboot_time', to='project.choice')),
                ('regulated_data', models.ManyToManyField(blank=True, limit_choices_to={'parent__code': 'REGULATED_SENSITIVE_DATA'}, related_name='regulated', to='project.Choice')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('routing', models.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('custom_form', models.CharField(blank=True, choices=[('', ''), ('TabForm', 'Base Form'), ('PhoneLocationForm', 'Phone Location'), ('EquipmentForm', 'Equipment'), ('NewLocationForm', 'New Location'), ('AddlInfoForm', 'Additional Information'), ('ReviewForm', 'Review'), ('ChartfieldForm', 'Chartfield'), ('RestrictionsForm', 'Restrictions'), ('FeaturesForm', 'Features'), ('StaticForm', 'Static Page'), ('AuthCodeForm', 'Auth Codes'), ('AuthCodeCancelForm', 'Auth Codes'), ('CMCCodeForm', 'CMC Codes'), ('ProductForm', 'Quantity Model'), ('ContactCenterForm', 'Contact Center'), ('BillingForm', 'Billing'), ('VoicemailForm', 'Voicemail'), ('DetailsCIFSForm', 'CIFS Details'), ('DetailsNFSForm', 'NFS Details'), ('AccessCIFSForm', 'CIFS Access'), ('AccessNFSForm', 'NFS Access'), ('BillingStorageForm', 'Billing'), ('BackupDetailsForm', 'Backup Details'), ('VolumeSelectionForm', 'Volume Selection'), ('SubscriptionSelForm', 'Subscription Selection'), ('DatabaseTypeForm', 'Database Type'), ('DatabaseConfigForm', 'Database Configuration'), ('ServerInfoForm', 'Server Info'), ('ServerSupportForm', 'Server Support'), ('ServerSpecForm', 'Server Specification'), ('ServerDataForm', 'Server Data Sensitivity'), ('DataDenForm', 'Data Den Form')], max_length=20)),
                ('progressive_disclosure', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StorageRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('NFS', 'NFS'), ('CIFS', 'CIFS')], default='NFS', max_length=4)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=8)),
                ('unit_of_measure', models.CharField(choices=[('GB', 'Gigabytes'), ('TB', 'Terabytes')], default='GB', max_length=2)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=8)),
                ('storage_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.storageowner')),
            ],
        ),
        migrations.CreateModel(
            name='StorageInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('size', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('NFS', 'NFS'), ('CIFS', 'CIFS')], default='NFS', max_length=4)),
                ('shortcode', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('uid', models.PositiveIntegerField(blank=True, null=True)),
                ('ad_group', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('deptid', models.CharField(blank=True, max_length=6, null=True)),
                ('autogrow', models.BooleanField(default=False)),
                ('flux', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oscauth.ldapgroup')),
                ('owner_bak', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.storageowner')),
                ('rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.storagerate')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('storage_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='order.storageinstance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='service',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.servicegroup'),
        ),
        migrations.CreateModel(
            name='ServerDisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('controller', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)])),
                ('device', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)])),
                ('size', models.IntegerField()),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disks', to='order.server')),
            ],
        ),
        migrations.CreateModel(
            name='ServerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='order.server')),
            ],
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('category', models.ManyToManyField(to='order.FeatureCategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('active', models.BooleanField(default=True)),
                ('picture', models.FileField(blank=True, null=True, upload_to='pictures')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.productcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_reference', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('priority', models.CharField(choices=[('High', 'Expedited'), ('Medium', 'Standard'), ('Low', 'Low')], default='Medium', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('chartcom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.chartcom')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.service')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deptid', models.CharField(max_length=8)),
                ('data', models.JSONField()),
                ('external_reference_id', models.PositiveIntegerField(null=True)),
                ('internal_reference_id', models.PositiveIntegerField(null=True)),
                ('chartcom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.chartcom')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.order')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=100)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('additional_info', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('category', models.ManyToManyField(to='order.FeatureCategory')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.featuretype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('display_seq_no', models.PositiveIntegerField()),
                ('label', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('help_text', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('', ''), ('Radio', 'Radio'), ('ST', 'String'), ('Select', 'Select'), ('List', 'List'), ('NU', 'Number'), ('Chart', 'Chartcom'), ('Label', 'Label'), ('Checkbox', 'Checkbox'), ('McGroup', 'MCommunity Group'), ('MyGroups', 'Users MCommunity Group'), ('ShortCode', 'Short Code'), ('Phone', 'Phone Number'), ('Uniqname', 'Uniqname'), ('HTML', 'Static HTML'), ('EmailField', 'Email')], max_length=20)),
                ('attributes', models.CharField(blank=True, max_length=1000)),
                ('arguments', models.JSONField(blank=True, default=dict)),
                ('display_condition', models.CharField(blank=True, max_length=100)),
                ('target', models.CharField(blank=True, max_length=80, null=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.step')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('in_service', models.BooleanField(default=True)),
                ('shortcode', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('size', models.IntegerField(null=True)),
                ('purpose', models.TextField()),
                ('on_call', models.PositiveSmallIntegerField(choices=[(0, 'Business Hours'), (1, '24/7')], null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('support_email', models.CharField(max_length=100)),
                ('support_phone', models.CharField(max_length=100)),
                ('legacy_data', models.TextField()),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oscauth.ldapgroup')),
                ('server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.server')),
                ('type', models.ForeignKey(blank=True, limit_choices_to={'parent__code': 'DATABASE_TYPE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type', to='project.choice')),
            ],
        ),
        migrations.CreateModel(
            name='Constant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.action')),
            ],
        ),
        migrations.CreateModel(
            name='BackupNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=8)),
                ('backup_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='order.backupdomain')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='attachments')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.item')),
            ],
        ),
        migrations.CreateModel(
            name='ArcInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('size', models.PositiveIntegerField()),
                ('type', models.CharField(choices=[('NFS', 'NFS'), ('CIFS', 'CIFS')], default='NFS', max_length=4)),
                ('shortcode', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('uid', models.PositiveIntegerField(blank=True, null=True)),
                ('ad_group', models.CharField(blank=True, max_length=100, null=True)),
                ('nfs_group_id', models.CharField(blank=True, max_length=100, null=True)),
                ('multi_protocol', models.BooleanField(default=False)),
                ('sensitive_regulated', models.BooleanField(default=False)),
                ('great_lakes', models.BooleanField(default=False)),
                ('armis', models.BooleanField(default=False)),
                ('lighthouse', models.BooleanField(default=False)),
                ('globus', models.BooleanField(default=False)),
                ('globus_phi', models.BooleanField(default=False)),
                ('thunder_x', models.BooleanField(default=False)),
                ('research_computing_package', models.BooleanField(default=False)),
                ('amount_used', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oscauth.ldapgroup')),
                ('rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.storagerate')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArcHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('arc_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='order.arcinstance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArcBilling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
                ('shortcode', models.CharField(max_length=100)),
                ('arc_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortcodes', to='order.arcinstance')),
            ],
        ),
        migrations.AddField(
            model_name='action',
            name='charge_types',
            field=models.ManyToManyField(to='order.ChargeType'),
        ),
        migrations.AddField(
            model_name='action',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.service'),
        ),
        migrations.AddField(
            model_name='action',
            name='steps',
            field=models.ManyToManyField(to='order.Step'),
        ),
    ]
