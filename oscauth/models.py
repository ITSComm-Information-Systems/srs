from django.db import models
from django.utils import timezone
from django.contrib.auth.models import User, Group
#from django.contrib.auth import get_username


class Role(models.Model):  
    group = models.OneToOneField(Group, on_delete=models.CASCADE)
    display_seq_no = models.PositiveIntegerField(unique=True, blank=True, null=True)
    role = models.CharField(max_length=30,unique=True)
    role_description = models.CharField(max_length=1000)
    grantable_by_dept = models.BooleanField(default = False)
    active = models.BooleanField(default=True)
    inactivation_date = models.DateTimeField('Date Inactivated', blank=True, null=True)
    create_date = models.DateTimeField('Date Created', auto_now_add=True)
    created_by = models.CharField(max_length=150, default='Will be autogenerated')
    last_update_date = models.DateTimeField('Last Date Updated', auto_now=True)
    last_updated_by = models.CharField(max_length=150, default='Will be autogenerated')

    def __str__(self):
        return self.role

    def save(self, *args, **kwargs):
        if not self.active and self.inactivation_date is None:
            self.inactivation_date = timezone.now()
        elif self.active and self.inactivation_date is not None:
            self.inactivation_date = None
        if self.pk is None:
            self.created_by = 'First user'
#            self.creted_by = user.get_username
            self.last_updated_by = 'First user'
#            self.last_updated_by = user.get_username
        elif self.pk is not None:
            self.last_updated_by = 'New user'
#            self.last_updated_by = user.get_username
        super(Role, self).save(*args, **kwargs)

    class Meta:
        db_table = 'auth_role'

class AuthUserDept(models.Model):
    user = models.ForeignKey(User, on_delete=models.PROTECT)
    group = models.ForeignKey(Group, on_delete=models.PROTECT)
    dept = models.CharField(max_length=10, blank=True)

    class Meta:
        db_table = 'auth_user_dept'
        unique_together = (("user", "group", "dept"),)
